<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>

  <configSections>
    <section name="AdWordsApi" type="System.Configuration.DictionarySectionHandler" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" />
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>
  <dataConfiguration defaultDatabase="ClientWallConnectionString" />
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />

    <add key="auth0:ClientId" value="MyXT7V7QXBOA5ebyqPu2vlP7hQ9kBREW" />
    <add key="auth0:ClientSecret" value="PYlTSlRlOcDnRL4kO0byoK7A-XsMvq3DQAyamubQ_DfOdQECAlFZrPkeyOUZDv8-" />
    <add key="auth0:Domain" value="meet-emma.auth0.com" />
    
  </appSettings>
  
  <connectionStrings>
    <add name="ClientWallConnectionString" connectionString="Data Source=77.68.37.145;Initial Catalog=CampaignHub;User ID=sa;Password=yhCuqW56U;Connect Timeout=3000;Max Pool Size=200;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <AdWordsApi>
    <!--
      This section contains the settings specific to AdWords and DoubleClick Ad
      Exchange Buyer API DotNet Client Library. You can use the App.config /
      Web.config for quickly configuring and running a simple application.
      However, it is not mandatory to provide your settings in the config file,
      you may also set or override these settings at runtime. See
      https://code.google.com/p/google-api-adwords-dotnet/wiki/HowToUseAdWordsUser
      for details.

      You can refer to
      https://code.google.com/p/google-api-adwords-dotnet/wiki/UnderstandingAppConfig
      for detailed explanation of each configuration key.
    -->
    <!-- Settings related to SOAP logging. -->
    <add key="MaskCredentials" value="true" />
    <!-- Settings related to general library behaviour. -->
    <!-- Use this key to automatically retry a call that failed due to a
         recoverable error like expired credentials. -->
    <!-- <add key="RetryCount" value="1" /> -->
    <!-- Set the service timeout in milliseconds. -->
    <!-- <add key="Timeout" value="100000" /> -->
    <!-- Use this key to enable or disable gzip compression in SOAP requests.-->
    <add key="EnableGzipCompression" value="true" />
    <!-- Set this flag to true to include the list of client library utilities
         that your code uses in the user agent string.-->
    <add key="IncludeUtilitiesInUserAgent" value="true" />
    <!-- Proxy settings for library. -->
    <add key="ProxyServer" value="" />
    <add key="ProxyUser" value="" />
    <add key="ProxyPassword" value="" />
    <add key="ProxyDomain" value="" />
    <!-- Settings specific to AdWords API.-->
    <!-- The name to uniquely identify your application. The client library will
         include this text in the user agent when sending requests to the
         server. This name may be used to uniquely identify your application's
         API requests from the server logs.-->
    <add key="UserAgent" value="meet-emma" />
    <!-- See https://developers.google.com/adwords/api/docs/signingup for
         instructions on signing up for a developer token.-->
    <add key="DeveloperToken" value="lm25z688dVdqw-QXn9UrNw" />
    <!-- If your application is a simple script that makes calls to only a
         single Adwords account, then you can set your customer ID here. If you
         have multiple customer IDs to deal with in your account, then you can
         comment out this key and set the value at runtime by setting
         ((AdWordsAppConfig) user.Config).ClientCustomerId = "xxx";
    -->
    <add key="ClientCustomerId" value="" />
    <!-- Use the following settings to skip the report header and summary rows
         when downloading a report in CSV, TSV or their gzipped formats. -->
    <add key="SkipReportHeader" value="false" />
    <add key="SkipReportSummary" value="false" />
    <add key="SkipColumnHeader" value="false" />
    <!-- Use the following setting to include zero impression rows when
         downloading a report. If this setting is commented out, then the server
         behaves as explained in
         https://developers.google.com/adwords/api/docs/guides/zero-impression-reports#default_behavior.
    -->
    <!-- <add key="IncludeZeroImpressions" value="true" /> -->
    <!-- Settings specific to use OAuth2 as authentication mechanism. You could
         run Common\Util\OAuth2TokenGenerator.cs to generate this section of the
         config file.
    -->
    <!-- Provide the OAuth2 client ID and secret. You can create one from
         https://code.google.com/apis/console/. See
         https://code.google.com/p/google-api-adwords-dotnet/wiki/UsingOAuth
         for more details.
    -->

    <!--<add key="OAuth2ClientId" value="645807510586-1ufleelcguhi5lv46002f0imc4469bqe.apps.googleusercontent.com"/>
    <add key="OAuth2ClientSecret" value="w9bwiexXuqioMfxvmp3nWBai"/>-->

    <add key="OAuth2ClientId" value="551007376892-lqjhddrrt6nhrhha0af7vdiooqiltcjr.apps.googleusercontent.com" />
    <add key="OAuth2ClientSecret" value="FmgeWMleF0Vuc3NGiCNsRIRn" />


    <!-- The following OAuth2 settings are optional. -->
    <!-- Provide a different OAuth2 scope if required. Multiple scopes should be
         separated by spaces. -->
    <!-- <add key="OAuth2Scope" value="INSERT_OAUTH2_SCOPE_HERE" /> -->
    <!-- Use the following keys if you want to use Web / Installed application
         OAuth flow.-->
    <add key="OAuth2Mode" value="APPLICATION" />
    <!-- If you are using a single AdWords manager account's credentials to make
         calls to all your accounts, then you can run OAuth2TokenGenerator.cs
         to generate a RefreshToken for that account and set this key in your
         application's App.config / Web.config. If you are making calls to
         multiple unrelated accounts, then you need to implement OAuth2 flow in
         your account and set this key at runtime. See OAuth folder under
         Examples folder for a  web and a console application example.
    -->
    <add key="OAuth2RefreshToken" value="" />
    <!-- Optional: Specify an OAuth2 redirect url if you are building a
         web application and implementing OAuth2 web flow in your application.
    -->
    <add key="OAuth2RedirectUri" value="http://app.meet-emma.com/Link/OnAuthorizeButtonClick" />
    <!-- Use the following keys if you want to use OAuth2 service account flow.
         You should comment out all the keys for Web / Installed application
         OAuth flow above. See
         https://developers.google.com/adwords/api/docs/guides/service-accounts
         and https://code.google.com/p/google-api-adwords-dotnet/wiki/UsingOAuth
         for more details.
    -->
    <!--
    <add key="OAuth2Mode" value="SERVICE_ACCOUNT" />
    <add key="OAuth2ServiceAccountEmail"
        value="INSERT_OAUTH2_SERVICE_ACCOUNT_EMAIL_HERE" />
    <add key="OAuth2PrnEmail" value="INSERT_OAUTH2_USER_EMAIL_HERE" />
    <add key="OAuth2JwtCertificatePath"
        value="INSERT_OAUTH2_JWT_CERTIFICATE_PATH_HERE" />
    <add key="OAuth2JwtCertificatePassword"
        value="INSERT_OAUTH2_JWT_CERTIFICATE_PASSWORD_HERE" />
    -->
  </AdWordsApi>
  
  <system.web>

    <webServices>
      <soapExtensionTypes>
        <add type="Google.Api.Ads.Common.Lib.SoapListenerExtension, Google.Ads.Common" priority="1" group="0" />
      </soapExtensionTypes>
    </webServices>
    
    <customErrors mode="Off" />
    
    <httpRuntime targetFramework="4.5" />
    
    <compilation targetFramework="4.5" />

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    
  </system.web>


 
  
  <system.webServer>
    
    <validation validateIntegratedModeConfiguration="false" />

  <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
        <rewrite>
            <rules>
               <!-- <rule name="http to https redirect" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAny">
                        <add input="{HTTPS}" pattern="OFF" />
                    </conditions>
                    <action type="Redirect" url="https://client.broadplace.com/{R:0}" redirectType="Found" />
                </rule> -->
            </rules>
        </rewrite>

    
    
  </system.webServer>
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />   
      </dependentAssembly>
      <dependentAssembly>
      <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
      <bindingRedirect oldVersion="4.5.0.0" newVersion="7.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
